name: Publish to App Store Connect

#on:
#  workflow_dispatch:
#  push:
#    branches:
#      - main
on: push
jobs:
  build:
    runs-on: macos-13

    env:
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
      APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
      APP_STORE_APP_ID: ${{ secrets.APP_STORE_APP_ID }}
      DIST_CERTIFICATE: ${{ secrets.DIST_CERTIFICATE_BASE64 }}
      DIST_CERTIFICATE_PASSWORD: ${{ secrets.DIST_CERTIFICATE_PASSWORD }}
      DIST_PROFILE: ${{ secrets.DIST_PROFILE_BASE64 }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2'
        channel: 'stable'
        cache: true

    - name: Retrieve the secret and decode it to file
      env:
        FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
        GOOGLE_SERVICE_INFO_PLIST_BASE64: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}
      run: |
        cd khelo
        echo $FIREBASE_OPTIONS_BASE64 | base64 --decode > lib/firebase_options.dart  
        echo $GOOGLE_SERVICE_INFO_PLIST_BASE64 | base64 --decode > ios/Runner/GoogleService-Info.plist

    - name: Install Dependencies
      run: |
        cd data && flutter clean && flutter pub get
        cd ../style && flutter clean && flutter pub get
        cd ../khelo && flutter clean && flutter pub get
        cd ios && pod install --repo-update && flutter clean && flutter pub get
        cd ..

    - name: Install Codemagic CLI tools
      run: pip install codemagic-cli-tools

    - name: install flutterfire CLI
      run: dart pub global activate flutterfire_cli

    - name: Set up keychain
      run: keychain initialize

    - name: Set up Provisioning Profiles
      run: |
        PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
        mkdir -p "$PROFILES_HOME"
        PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
        echo ${DIST_PROFILE} | base64 --decode > "$PROFILE_PATH"
        echo "Saved Provisioning profile $PROFILE_PATH"

    - name: Set up Signing certificate
      run: |
        echo $DIST_CERTIFICATE | base64 --decode > /tmp/certificate.p12
        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $DIST_CERTIFICATE_PASSWORD

    - name: Set up code signing settings on Xcode project
      run: xcode-project use-profiles

    - name: Build ipa for distribution
      run: |
        cd khelo
        file='VERSION'
        fileData=`cat $file`
        IFS='.'
        read -a versionValue <<< "$fileData"
        buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
        IFS=''
        buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
        echo "Generating iOS build $buildName $buildNumber"   
        flutter build ipa --release --build-number=$buildNumber --build-name=$buildName --export-options-plist=$HOME/export_options.plist
        echo "Uploading dSYM to Crashlytics"
        ios/Pods/FirebaseCrashlytics/upload-symbols -gsp ios/Runner/GoogleService-Info.plist -p ios build/ios/archive/Runner.xcarchive/dSYMs

    - name: Publish the app to App Store Connect
      run: |
        APP_FILE=$(find $(pwd) -name "*.ipa")
        app-store-connect publish \
        --path "$APP_FILE"