name: Publish to Google Play Store

on: push
#  push:
#    branches:
#      - main
#  workflow_dispatch:

jobs:
  deploy_internal_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 17.0.6
          cache: 'gradle'

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true

      - name: Retrieve the secret and decode it to file
        env:
          FIREBASE_OPTIONS_BASE64: ${{ secrets.FIREBASE_OPTIONS_BASE64 }}
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}

        run: |
          cd khelo
          echo $FIREBASE_OPTIONS_BASE64 | base64 -di > lib/firebase_options.dart
          echo $GOOGLE_SERVICES_JSON_BASE64 | base64 -di > android/app/google-services.json

      - name: Install Dependencies
        run: |
          cd data && flutter clean && flutter pub get
          cd ../style && flutter clean && flutter pub get
          cd ../khelo && flutter clean && flutter pub get
          cd ..

      - name: Deploy Internally
        env:
          APP_PLAY_SERVICE_JSON: ${{ secrets.APP_PLAY_SERVICE_JSON_BASE64 }}
          APKSIGN_KEYSTORE_BASE64: ${{ secrets.APKSIGN_KEYSTORE_BASE64 }}
          APKSIGN_KEYSTORE_PASS: ${{ secrets.APKSIGN_KEYSTORE_PASS }}
          APKSIGN_KEY_ALIAS: ${{ secrets.APKSIGN_KEY_ALIAS }}
          APKSIGN_KEY_PASS: ${{ secrets.APKSIGN_KEY_PASS }}

        run: |
          echo  $APKSIGN_KEYSTORE_BASE64 | base64 -di > release.keystore
          export APKSIGN_KEYSTORE=`pwd`/release.keystore
          cd khelo
          file='VERSION'
          fileData=`cat $file`
          IFS='.'
          read -a versionValue <<< "$fileData"
          buildNumber=$(( ${versionValue[0]} * 1000000 + ${versionValue[1]} * 10000 + ${{ github.run_number }} ))
          IFS=''
          buildName="${versionValue[0]}.${versionValue[1]}.${{ github.run_number }}"
          echo "Generating android build $buildName $buildNumber"     
          cd android
          gem install bundler -v 2.4.22
          bundle install
          echo $APP_PLAY_SERVICE_JSON | base64 -di > google_play_api_key.json
          bundle exec fastlane supply init --track internal
          bundle exec fastlane upload_internal versionName:$buildName versionCode:$buildNumber